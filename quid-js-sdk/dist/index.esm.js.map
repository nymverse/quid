{"version":3,"file":"index.esm.js","sources":["../src/core/extension-connector.ts","../src/core/webauthn-bridge.ts","../src/utils/event-emitter.ts","../src/utils/logger.ts","../src/core/quid-client.ts","../src/oauth/oauth-client.ts","../src/components/signin-button.ts","../src/components/react/signin-button.tsx","../src/components/react/use-quid.ts","../src/index.ts"],"sourcesContent":["/**\n * Extension Connector\n * Handles communication with the QuID browser extension\n */\n\nimport {\n  QuIDConfig,\n  QuIDIdentity,\n  AuthenticationRequest,\n  AuthenticationResponse,\n  CreateIdentityRequest\n} from '../types';\nimport { Logger } from '../utils/logger';\n\nexport class ExtensionConnector {\n  private config: QuIDConfig;\n  private logger: Logger;\n  public isConnected = false;\n  private extensionId?: string;\n\n  constructor(config: QuIDConfig, logger: Logger) {\n    this.config = config;\n    this.logger = logger;\n  }\n\n  /**\n   * Attempt to connect to the QuID browser extension\n   */\n  public async connect(): Promise<boolean> {\n    try {\n      // Check if we're in a browser environment\n      if (typeof window === 'undefined' || !window.chrome?.runtime) {\n        this.logger.debug('Not in browser environment or Chrome APIs not available');\n        return false;\n      }\n\n      // Try to detect QuID extension\n      const detected = await this.detectExtension();\n      if (!detected) {\n        this.logger.debug('QuID extension not detected');\n        return false;\n      }\n\n      // Test connection\n      const status = await this.sendMessage({ type: 'GET_EXTENSION_STATUS' });\n      if (status && status.isConnected !== undefined) {\n        this.isConnected = true;\n        this.logger.info('Successfully connected to QuID extension');\n        return true;\n      }\n\n      return false;\n\n    } catch (error) {\n      this.logger.debug('Failed to connect to extension:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Disconnect from the extension\n   */\n  public disconnect(): void {\n    this.isConnected = false;\n    this.extensionId = undefined;\n  }\n\n  /**\n   * Get identities from the extension\n   */\n  public async getIdentities(): Promise<QuIDIdentity[]> {\n    if (!this.isConnected) {\n      throw new Error('Extension not connected');\n    }\n\n    try {\n      const response = await this.sendMessage({ type: 'GET_IDENTITIES' });\n      \n      if (response.success && response.identities) {\n        return response.identities.map(this.mapIdentity);\n      } else {\n        throw new Error(response.error || 'Failed to get identities');\n      }\n    } catch (error) {\n      this.logger.error('Failed to get identities from extension:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create a new identity via the extension\n   */\n  public async createIdentity(request: CreateIdentityRequest): Promise<QuIDIdentity> {\n    if (!this.isConnected) {\n      throw new Error('Extension not connected');\n    }\n\n    try {\n      const response = await this.sendMessage({\n        type: 'CREATE_IDENTITY',\n        config: {\n          name: request.name,\n          securityLevel: request.securityLevel || 'Level1',\n          networks: request.networks || ['web']\n        }\n      });\n\n      if (response.success && response.identity) {\n        return this.mapIdentity(response.identity);\n      } else {\n        throw new Error(response.error || 'Failed to create identity');\n      }\n    } catch (error) {\n      this.logger.error('Failed to create identity via extension:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Authenticate via the extension\n   */\n  public async authenticate(request: AuthenticationRequest): Promise<AuthenticationResponse> {\n    if (!this.isConnected) {\n      throw new Error('Extension not connected');\n    }\n\n    try {\n      const response = await this.sendMessage({\n        type: 'AUTH_REQUEST',\n        challenge: request.challenge,\n        allowCredentials: request.allowCredentials,\n        userVerification: request.userVerification,\n        timeout: request.timeout\n      });\n\n      return {\n        success: response.success || false,\n        error: response.error,\n        credential: response.credential,\n        identity: response.identity ? this.mapIdentity(response.identity) : undefined\n      };\n\n    } catch (error) {\n      this.logger.error('Authentication via extension failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Authentication failed'\n      };\n    }\n  }\n\n  /**\n   * Sign a challenge via the extension\n   */\n  public async signChallenge(identityId: string, challenge: string): Promise<string> {\n    if (!this.isConnected) {\n      throw new Error('Extension not connected');\n    }\n\n    try {\n      const response = await this.sendMessage({\n        type: 'SIGN_CHALLENGE',\n        identityId,\n        challenge,\n        origin: window.location.origin\n      });\n\n      if (response.success && response.signature) {\n        return response.signature;\n      } else {\n        throw new Error(response.error || 'Failed to sign challenge');\n      }\n    } catch (error) {\n      this.logger.error('Failed to sign challenge via extension:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Detect if QuID extension is installed\n   */\n  private async detectExtension(): Promise<boolean> {\n    try {\n      // Method 1: Check for QuID API in page\n      if (window.QuID && window.QuID.isAvailable) {\n        this.logger.debug('QuID API detected in page');\n        return true;\n      }\n\n      // Method 2: Check for extension via custom event\n      return new Promise((resolve) => {\n        const timeout = setTimeout(() => resolve(false), 1000);\n        \n        const handler = (event: CustomEvent) => {\n          if (event.detail && event.detail.available) {\n            clearTimeout(timeout);\n            window.removeEventListener('quid:ready', handler as EventListener);\n            resolve(true);\n          }\n        };\n\n        window.addEventListener('quid:ready', handler as EventListener);\n        \n        // Try to trigger extension detection\n        window.dispatchEvent(new CustomEvent('quid:detect'));\n      });\n\n    } catch (error) {\n      this.logger.debug('Extension detection failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Send message to extension\n   */\n  private async sendMessage(message: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new Error('Extension message timeout'));\n      }, this.config.timeout || 60000);\n\n      try {\n        // Method 1: Direct extension communication (if extension ID is known)\n        if (this.extensionId && window.chrome?.runtime) {\n          window.chrome.runtime.sendMessage(this.extensionId, message, (response) => {\n            clearTimeout(timeout);\n            if (window.chrome.runtime.lastError) {\n              reject(new Error(window.chrome.runtime.lastError.message));\n            } else {\n              resolve(response);\n            }\n          });\n          return;\n        }\n\n        // Method 2: Use QuID API if available\n        if (window.QuID) {\n          this.handleQuIDAPIMessage(message, resolve, reject, timeout);\n          return;\n        }\n\n        // Method 3: Custom events\n        this.handleCustomEventMessage(message, resolve, reject, timeout);\n\n      } catch (error) {\n        clearTimeout(timeout);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Handle message via QuID API\n   */\n  private handleQuIDAPIMessage(message: any, resolve: Function, reject: Function, timeout: NodeJS.Timeout): void {\n    try {\n      switch (message.type) {\n        case 'GET_EXTENSION_STATUS':\n          window.QuID.isReady().then(resolve).catch(reject);\n          break;\n          \n        case 'GET_IDENTITIES':\n          window.QuID.getIdentities().then(resolve).catch(reject);\n          break;\n          \n        case 'AUTH_REQUEST':\n          window.QuID.authenticate({\n            challenge: message.challenge,\n            userVerification: message.userVerification,\n            timeout: message.timeout,\n            allowCredentials: message.allowCredentials\n          }).then(resolve).catch(reject);\n          break;\n          \n        case 'CREATE_IDENTITY':\n          window.QuID.createIdentity(message.config).then(resolve).catch(reject);\n          break;\n          \n        case 'SIGN_CHALLENGE':\n          window.QuID.signChallenge(message.identityId, message.challenge)\n            .then(signature => resolve({ success: true, signature }))\n            .catch(reject);\n          break;\n          \n        default:\n          reject(new Error('Unknown message type'));\n      }\n    } catch (error) {\n      clearTimeout(timeout);\n      reject(error);\n    }\n  }\n\n  /**\n   * Handle message via custom events\n   */\n  private handleCustomEventMessage(message: any, resolve: Function, reject: Function, timeout: NodeJS.Timeout): void {\n    const requestId = `quid-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    \n    const handler = (event: CustomEvent) => {\n      if (event.detail && event.detail.requestId === requestId) {\n        clearTimeout(timeout);\n        window.removeEventListener('quid:response', handler as EventListener);\n        resolve(event.detail.response);\n      }\n    };\n\n    window.addEventListener('quid:response', handler as EventListener);\n    \n    window.dispatchEvent(new CustomEvent('quid:request', {\n      detail: { ...message, requestId }\n    }));\n  }\n\n  /**\n   * Map extension identity to SDK identity\n   */\n  private mapIdentity(extIdentity: any): QuIDIdentity {\n    return {\n      id: extIdentity.id,\n      name: extIdentity.name,\n      securityLevel: extIdentity.security_level || extIdentity.securityLevel || 'Level1',\n      networks: extIdentity.networks || ['web'],\n      isActive: extIdentity.is_active !== false,\n      createdAt: new Date(extIdentity.created_at || extIdentity.createdAt || Date.now()),\n      lastUsedAt: extIdentity.last_used_at || extIdentity.lastUsedAt ? \n        new Date(extIdentity.last_used_at || extIdentity.lastUsedAt) : undefined,\n      publicKey: extIdentity.public_key || extIdentity.publicKey\n    };\n  }\n}\n\n// Extend window interface for QuID API\ndeclare global {\n  interface Window {\n    QuID?: {\n      isAvailable: boolean;\n      authenticate: (options: any) => Promise<any>;\n      getIdentities: () => Promise<any[]>;\n      createIdentity: (config: any) => Promise<any>;\n      signChallenge: (identityId: string, challenge: string) => Promise<string>;\n      isReady: () => Promise<any>;\n    };\n  }\n}","/**\n * WebAuthn Bridge\n * Provides fallback WebAuthn functionality when QuID extension is not available\n */\n\nimport {\n  AuthenticationRequest,\n  AuthenticationResponse,\n  WebAuthnCredentialRequestOptions,\n  QuIDCredential\n} from '../types';\nimport { Logger } from '../utils/logger';\n\nexport class WebAuthnBridge {\n  private logger: Logger;\n  private client: any; // Reference to QuIDClient\n\n  constructor(client: any, logger: Logger) {\n    this.client = client;\n    this.logger = logger;\n  }\n\n  /**\n   * Initialize WebAuthn bridge\n   */\n  public init(): void {\n    if (!this.isWebAuthnSupported()) {\n      this.logger.warn('WebAuthn is not supported in this browser');\n      return;\n    }\n\n    this.logger.debug('WebAuthn bridge initialized');\n  }\n\n  /**\n   * Check if WebAuthn is supported\n   */\n  public isWebAuthnSupported(): boolean {\n    return !!(navigator.credentials && navigator.credentials.create && navigator.credentials.get);\n  }\n\n  /**\n   * Authenticate using WebAuthn as fallback\n   */\n  public async authenticate(request: AuthenticationRequest): Promise<AuthenticationResponse> {\n    if (!this.isWebAuthnSupported()) {\n      return {\n        success: false,\n        error: 'WebAuthn is not supported in this browser'\n      };\n    }\n\n    try {\n      this.logger.debug('Starting WebAuthn fallback authentication');\n\n      const options: WebAuthnCredentialRequestOptions = {\n        publicKey: {\n          challenge: this.stringToArrayBuffer(request.challenge),\n          timeout: request.timeout,\n          rpId: request.rpId || this.extractDomain(request.origin),\n          allowCredentials: request.allowCredentials || [],\n          userVerification: request.userVerification || 'preferred'\n        }\n      };\n\n      const credential = await navigator.credentials.get(options) as PublicKeyCredential | null;\n\n      if (!credential) {\n        return {\n          success: false,\n          error: 'No credential returned from WebAuthn'\n        };\n      }\n\n      const response = credential.response as AuthenticatorAssertionResponse;\n      \n      const quidCredential: QuIDCredential = {\n        id: credential.id,\n        rawId: this.arrayBufferToString(credential.rawId),\n        type: 'public-key',\n        response: {\n          authenticatorData: this.arrayBufferToString(response.authenticatorData),\n          clientDataJSON: this.arrayBufferToString(response.clientDataJSON),\n          signature: this.arrayBufferToString(response.signature),\n          userHandle: response.userHandle ? this.arrayBufferToString(response.userHandle) : undefined\n        }\n      };\n\n      this.logger.info('WebAuthn fallback authentication successful');\n\n      return {\n        success: true,\n        credential: quidCredential\n      };\n\n    } catch (error) {\n      this.logger.error('WebAuthn fallback authentication failed:', error);\n      \n      return {\n        success: false,\n        error: this.getWebAuthnErrorMessage(error)\n      };\n    }\n  }\n\n  /**\n   * Create a WebAuthn credential (registration)\n   */\n  public async createCredential(options: {\n    challenge: string;\n    userId: string;\n    userName: string;\n    userDisplayName: string;\n    rpName: string;\n    rpId?: string;\n    timeout?: number;\n  }): Promise<AuthenticationResponse> {\n    if (!this.isWebAuthnSupported()) {\n      return {\n        success: false,\n        error: 'WebAuthn is not supported in this browser'\n      };\n    }\n\n    try {\n      this.logger.debug('Creating WebAuthn credential');\n\n      const createOptions: CredentialCreationOptions = {\n        publicKey: {\n          challenge: this.stringToArrayBuffer(options.challenge),\n          rp: {\n            name: options.rpName,\n            id: options.rpId || this.extractDomain(window.location.origin)\n          },\n          user: {\n            id: this.stringToArrayBuffer(options.userId),\n            name: options.userName,\n            displayName: options.userDisplayName\n          },\n          pubKeyCredParams: [\n            { alg: -7, type: 'public-key' }, // ES256\n            { alg: -257, type: 'public-key' } // RS256\n          ],\n          timeout: options.timeout || 60000,\n          authenticatorSelection: {\n            authenticatorAttachment: 'platform',\n            userVerification: 'preferred',\n            requireResidentKey: false\n          },\n          attestation: 'direct'\n        }\n      };\n\n      const credential = await navigator.credentials.create(createOptions) as PublicKeyCredential | null;\n\n      if (!credential) {\n        return {\n          success: false,\n          error: 'No credential created'\n        };\n      }\n\n      const response = credential.response as AuthenticatorAttestationResponse;\n      \n      const quidCredential: QuIDCredential = {\n        id: credential.id,\n        rawId: this.arrayBufferToString(credential.rawId),\n        type: 'public-key',\n        response: {\n          authenticatorData: this.arrayBufferToString(response.authenticatorData),\n          clientDataJSON: this.arrayBufferToString(response.clientDataJSON),\n          signature: '', // Not applicable for creation\n          userHandle: undefined\n        }\n      };\n\n      this.logger.info('WebAuthn credential created successfully');\n\n      return {\n        success: true,\n        credential: quidCredential\n      };\n\n    } catch (error) {\n      this.logger.error('WebAuthn credential creation failed:', error);\n      \n      return {\n        success: false,\n        error: this.getWebAuthnErrorMessage(error)\n      };\n    }\n  }\n\n  /**\n   * Check if a credential exists for the current origin\n   */\n  public async isCredentialAvailable(): Promise<boolean> {\n    if (!this.isWebAuthnSupported()) {\n      return false;\n    }\n\n    try {\n      // Try a simple get call with no allowCredentials to see if platform authenticator is available\n      const available = await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n      return available;\n    } catch (error) {\n      this.logger.debug('Could not check credential availability:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Cleanup WebAuthn bridge\n   */\n  public cleanup(): void {\n    // Nothing to cleanup for WebAuthn\n    this.logger.debug('WebAuthn bridge cleaned up');\n  }\n\n  /**\n   * Convert string to ArrayBuffer\n   */\n  private stringToArrayBuffer(str: string): ArrayBuffer {\n    // If it's already a hex string, convert from hex\n    if (/^[0-9a-fA-F]+$/.test(str)) {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes.buffer;\n    }\n    \n    // Otherwise, convert from UTF-8\n    const encoder = new TextEncoder();\n    return encoder.encode(str).buffer;\n  }\n\n  /**\n   * Convert ArrayBuffer to string\n   */\n  private arrayBufferToString(buffer: ArrayBuffer): string {\n    const bytes = new Uint8Array(buffer);\n    return Array.from(bytes, byte => byte.toString(16).padStart(2, '0')).join('');\n  }\n\n  /**\n   * Extract domain from origin\n   */\n  private extractDomain(origin: string): string {\n    try {\n      const url = new URL(origin);\n      return url.hostname;\n    } catch (error) {\n      this.logger.warn('Could not extract domain from origin:', origin);\n      return 'localhost';\n    }\n  }\n\n  /**\n   * Get user-friendly error message from WebAuthn error\n   */\n  private getWebAuthnErrorMessage(error: any): string {\n    if (!error) return 'Unknown WebAuthn error';\n\n    const errorName = error.name || '';\n    const errorMessage = error.message || '';\n\n    switch (errorName) {\n      case 'NotAllowedError':\n        return 'Authentication was cancelled or not allowed';\n      case 'SecurityError':\n        return 'Security error during authentication';\n      case 'NotSupportedError':\n        return 'WebAuthn is not supported on this device';\n      case 'InvalidStateError':\n        return 'Invalid state for WebAuthn operation';\n      case 'ConstraintError':\n        return 'WebAuthn constraints could not be satisfied';\n      case 'UnknownError':\n        return 'An unknown error occurred during authentication';\n      default:\n        return errorMessage || 'WebAuthn authentication failed';\n    }\n  }\n}","/**\n * Event Emitter\n * Simple type-safe event emitter for QuID SDK\n */\n\nexport type EventListener<T> = (event: T) => void;\n\nexport class EventEmitter<T> {\n  private listeners: EventListener<T>[] = [];\n\n  /**\n   * Add an event listener\n   */\n  public on(listener: EventListener<T>): () => void {\n    this.listeners.push(listener);\n    \n    // Return unsubscribe function\n    return () => {\n      const index = this.listeners.indexOf(listener);\n      if (index > -1) {\n        this.listeners.splice(index, 1);\n      }\n    };\n  }\n\n  /**\n   * Add a one-time event listener\n   */\n  public once(listener: EventListener<T>): () => void {\n    const onceListener: EventListener<T> = (event: T) => {\n      listener(event);\n      unsubscribe();\n    };\n\n    const unsubscribe = this.on(onceListener);\n    return unsubscribe;\n  }\n\n  /**\n   * Emit an event to all listeners\n   */\n  public emit(event: T): void {\n    // Create a copy of listeners to avoid issues if listeners are modified during iteration\n    const currentListeners = [...this.listeners];\n    \n    for (const listener of currentListeners) {\n      try {\n        listener(event);\n      } catch (error) {\n        console.error('Error in event listener:', error);\n      }\n    }\n  }\n\n  /**\n   * Remove all listeners\n   */\n  public removeAllListeners(): void {\n    this.listeners = [];\n  }\n\n  /**\n   * Get the number of listeners\n   */\n  public get listenerCount(): number {\n    return this.listeners.length;\n  }\n}","/**\n * Logger\n * Simple logging utility for QuID SDK\n */\n\nexport class Logger {\n  private debug: boolean;\n  private prefix = '[QuID SDK]';\n\n  constructor(debug = false) {\n    this.debug = debug;\n  }\n\n  /**\n   * Set debug mode\n   */\n  public setDebug(debug: boolean): void {\n    this.debug = debug;\n  }\n\n  /**\n   * Log debug message (only in debug mode)\n   */\n  public debug(message: string, ...args: any[]): void {\n    if (this.debug) {\n      console.debug(this.prefix, message, ...args);\n    }\n  }\n\n  /**\n   * Log info message\n   */\n  public info(message: string, ...args: any[]): void {\n    if (this.debug) {\n      console.info(this.prefix, message, ...args);\n    }\n  }\n\n  /**\n   * Log warning message\n   */\n  public warn(message: string, ...args: any[]): void {\n    console.warn(this.prefix, message, ...args);\n  }\n\n  /**\n   * Log error message\n   */\n  public error(message: string, ...args: any[]): void {\n    console.error(this.prefix, message, ...args);\n  }\n}","/**\n * QuID Client\n * Core client for QuID authentication operations\n */\n\nimport {\n  QuIDConfig,\n  QuIDIdentity,\n  AuthenticationRequest,\n  AuthenticationResponse,\n  CreateIdentityRequest,\n  QuIDEvent,\n  QuIDEventType,\n  QuIDSDKError\n} from '../types';\nimport { ExtensionConnector } from './extension-connector';\nimport { WebAuthnBridge } from './webauthn-bridge';\nimport { EventEmitter } from '../utils/event-emitter';\nimport { Logger } from '../utils/logger';\n\nexport class QuIDClient extends EventEmitter<QuIDEvent> {\n  private config: Required<QuIDConfig>;\n  private extensionConnector: ExtensionConnector;\n  private webauthnBridge: WebAuthnBridge;\n  private logger: Logger;\n  private isReady = false;\n\n  constructor(config: QuIDConfig = {}) {\n    super();\n    \n    this.config = {\n      baseUrl: '',\n      timeout: 60000,\n      userVerification: 'preferred',\n      debug: false,\n      extensionId: '',\n      enableWebAuthnFallback: true,\n      ...config\n    };\n\n    this.logger = new Logger(this.config.debug);\n    this.extensionConnector = new ExtensionConnector(this.config, this.logger);\n    this.webauthnBridge = new WebAuthnBridge(this, this.logger);\n\n    this.init();\n  }\n\n  private async init(): Promise<void> {\n    try {\n      this.logger.debug('Initializing QuID client...');\n\n      // Try to connect to browser extension\n      const extensionConnected = await this.extensionConnector.connect();\n      \n      if (extensionConnected) {\n        this.logger.info('Connected to QuID browser extension');\n        this.emit({\n          type: 'extension-connected',\n          timestamp: new Date()\n        });\n      } else {\n        this.logger.warn('QuID browser extension not available');\n        \n        if (this.config.enableWebAuthnFallback) {\n          this.logger.info('WebAuthn fallback enabled');\n        }\n      }\n\n      // Set up WebAuthn integration\n      this.webauthnBridge.init();\n\n      this.isReady = true;\n      this.emit({\n        type: 'ready',\n        timestamp: new Date()\n      });\n\n      this.logger.info('QuID client ready');\n\n    } catch (error) {\n      this.logger.error('Failed to initialize QuID client:', error);\n      this.emit({\n        type: 'error',\n        data: error,\n        timestamp: new Date()\n      });\n    }\n  }\n\n  /**\n   * Check if QuID is ready for use\n   */\n  public get ready(): boolean {\n    return this.isReady;\n  }\n\n  /**\n   * Check if browser extension is available\n   */\n  public get extensionAvailable(): boolean {\n    return this.extensionConnector.isConnected;\n  }\n\n  /**\n   * Get available QuID identities\n   */\n  public async getIdentities(): Promise<QuIDIdentity[]> {\n    if (!this.isReady) {\n      throw this.createError('SDK_NOT_READY', 'QuID SDK is not ready');\n    }\n\n    try {\n      if (this.extensionConnector.isConnected) {\n        return await this.extensionConnector.getIdentities();\n      } else {\n        this.logger.warn('No extension available, returning empty identity list');\n        return [];\n      }\n    } catch (error) {\n      this.logger.error('Failed to get identities:', error);\n      throw this.createError('GET_IDENTITIES_FAILED', 'Failed to retrieve identities', error);\n    }\n  }\n\n  /**\n   * Create a new QuID identity\n   */\n  public async createIdentity(request: CreateIdentityRequest): Promise<QuIDIdentity> {\n    if (!this.isReady) {\n      throw this.createError('SDK_NOT_READY', 'QuID SDK is not ready');\n    }\n\n    if (!this.extensionConnector.isConnected) {\n      throw this.createError('EXTENSION_NOT_AVAILABLE', 'QuID browser extension is required for identity creation');\n    }\n\n    try {\n      this.logger.debug('Creating new identity:', request);\n      \n      const identity = await this.extensionConnector.createIdentity(request);\n      \n      this.emit({\n        type: 'identity-created',\n        data: identity,\n        timestamp: new Date()\n      });\n\n      this.logger.info('Identity created successfully:', identity.id);\n      return identity;\n\n    } catch (error) {\n      this.logger.error('Failed to create identity:', error);\n      throw this.createError('CREATE_IDENTITY_FAILED', 'Failed to create identity', error);\n    }\n  }\n\n  /**\n   * Authenticate using QuID\n   */\n  public async authenticate(request: Partial<AuthenticationRequest> = {}): Promise<AuthenticationResponse> {\n    if (!this.isReady) {\n      throw this.createError('SDK_NOT_READY', 'QuID SDK is not ready');\n    }\n\n    const authRequest: AuthenticationRequest = {\n      challenge: request.challenge || this.generateChallenge(),\n      origin: request.origin || window.location.origin,\n      userVerification: request.userVerification || this.config.userVerification,\n      timeout: request.timeout || this.config.timeout,\n      allowCredentials: request.allowCredentials,\n      rpId: request.rpId\n    };\n\n    this.emit({\n      type: 'authentication-started',\n      data: authRequest,\n      timestamp: new Date()\n    });\n\n    try {\n      this.logger.debug('Starting authentication:', authRequest);\n\n      let response: AuthenticationResponse;\n\n      if (this.extensionConnector.isConnected) {\n        // Use QuID extension\n        response = await this.extensionConnector.authenticate(authRequest);\n      } else if (this.config.enableWebAuthnFallback && navigator.credentials) {\n        // Fallback to WebAuthn\n        this.logger.info('Using WebAuthn fallback');\n        response = await this.webauthnBridge.authenticate(authRequest);\n      } else {\n        throw this.createError('NO_AUTH_METHOD', 'No authentication method available');\n      }\n\n      if (response.success) {\n        this.emit({\n          type: 'authentication-completed',\n          data: response,\n          timestamp: new Date()\n        });\n        this.logger.info('Authentication successful');\n      } else {\n        this.emit({\n          type: 'authentication-failed',\n          data: response,\n          timestamp: new Date()\n        });\n        this.logger.warn('Authentication failed:', response.error);\n      }\n\n      return response;\n\n    } catch (error) {\n      this.logger.error('Authentication error:', error);\n      \n      const errorResponse: AuthenticationResponse = {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown authentication error'\n      };\n\n      this.emit({\n        type: 'authentication-failed',\n        data: errorResponse,\n        timestamp: new Date()\n      });\n\n      return errorResponse;\n    }\n  }\n\n  /**\n   * Sign a challenge with a specific identity\n   */\n  public async signChallenge(identityId: string, challenge: string): Promise<string> {\n    if (!this.isReady) {\n      throw this.createError('SDK_NOT_READY', 'QuID SDK is not ready');\n    }\n\n    if (!this.extensionConnector.isConnected) {\n      throw this.createError('EXTENSION_NOT_AVAILABLE', 'QuID browser extension is required for signing');\n    }\n\n    try {\n      this.logger.debug('Signing challenge:', { identityId, challenge });\n      \n      const signature = await this.extensionConnector.signChallenge(identityId, challenge);\n      \n      this.logger.info('Challenge signed successfully');\n      return signature;\n\n    } catch (error) {\n      this.logger.error('Failed to sign challenge:', error);\n      throw this.createError('SIGN_CHALLENGE_FAILED', 'Failed to sign challenge', error);\n    }\n  }\n\n  /**\n   * Check connection status\n   */\n  public async getStatus(): Promise<{\n    ready: boolean;\n    extensionAvailable: boolean;\n    identityCount: number;\n    version: string;\n  }> {\n    const identities = this.extensionAvailable ? await this.getIdentities() : [];\n    \n    return {\n      ready: this.isReady,\n      extensionAvailable: this.extensionAvailable,\n      identityCount: identities.length,\n      version: '1.0.0'\n    };\n  }\n\n  /**\n   * Update configuration\n   */\n  public updateConfig(newConfig: Partial<QuIDConfig>): void {\n    Object.assign(this.config, newConfig);\n    this.logger.setDebug(this.config.debug);\n    this.logger.debug('Configuration updated:', newConfig);\n  }\n\n  /**\n   * Disconnect and cleanup\n   */\n  public disconnect(): void {\n    this.logger.debug('Disconnecting QuID client');\n    \n    this.extensionConnector.disconnect();\n    this.webauthnBridge.cleanup();\n    this.isReady = false;\n    \n    this.emit({\n      type: 'extension-disconnected',\n      timestamp: new Date()\n    });\n  }\n\n  private generateChallenge(): string {\n    const array = new Uint8Array(32);\n    crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n  }\n\n  private createError(code: string, message: string, cause?: any): QuIDSDKError {\n    const error = new Error(message) as QuIDSDKError;\n    error.name = 'QuIDSDKError';\n    error.code = code;\n    error.details = cause;\n    return error;\n  }\n}","/**\n * OAuth/OIDC Client\n * Provides OAuth and OpenID Connect integration for QuID\n */\n\nimport { QuIDClient } from '../core/quid-client';\nimport { \n  OAuthConfig, \n  OAuthProvider, \n  OAuthTokenResponse,\n  AuthenticationResponse \n} from '../types';\nimport { Logger } from '../utils/logger';\nimport * as jose from 'jose';\n\nexport class QuIDOAuthClient {\n  private quidClient: QuIDClient;\n  private config: Required<OAuthConfig>;\n  private logger: Logger;\n\n  constructor(config: OAuthConfig, quidClient?: QuIDClient) {\n    this.quidClient = quidClient || new QuIDClient();\n    this.logger = new Logger(false);\n    \n    // Set default provider configuration\n    const defaultProvider: OAuthProvider = {\n      authorizationEndpoint: '/oauth/authorize',\n      tokenEndpoint: '/oauth/token',\n      userInfoEndpoint: '/oauth/userinfo',\n      jwksEndpoint: '/oauth/jwks'\n    };\n\n    this.config = {\n      clientId: config.clientId,\n      clientSecret: config.clientSecret || '',\n      redirectUri: config.redirectUri,\n      scopes: config.scopes || ['openid', 'profile'],\n      provider: { ...defaultProvider, ...config.provider }\n    };\n  }\n\n  /**\n   * Generate OAuth authorization URL with QuID authentication\n   */\n  public generateAuthUrl(options: {\n    state?: string;\n    nonce?: string;\n    additionalParams?: Record<string, string>;\n  } = {}): string {\n    const { state, nonce, additionalParams = {} } = options;\n    \n    const params = new URLSearchParams({\n      response_type: 'code',\n      client_id: this.config.clientId,\n      redirect_uri: this.config.redirectUri,\n      scope: this.config.scopes.join(' '),\n      ...additionalParams\n    });\n\n    if (state) {\n      params.set('state', state);\n    }\n\n    if (nonce) {\n      params.set('nonce', nonce);\n    }\n\n    // Add QuID-specific parameters\n    params.set('quid_enabled', 'true');\n    params.set('response_mode', 'query');\n\n    const baseUrl = this.config.provider.authorizationEndpoint;\n    return `${baseUrl}?${params.toString()}`;\n  }\n\n  /**\n   * Handle OAuth callback with QuID authentication\n   */\n  public async handleCallback(callbackUrl: string): Promise<{\n    tokens: OAuthTokenResponse;\n    userInfo?: any;\n  }> {\n    const url = new URL(callbackUrl);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    const error = url.searchParams.get('error');\n\n    if (error) {\n      throw new Error(`OAuth error: ${error} - ${url.searchParams.get('error_description')}`);\n    }\n\n    if (!code) {\n      throw new Error('No authorization code received');\n    }\n\n    this.logger.debug('Processing OAuth callback with code:', code);\n\n    // Exchange code for tokens using QuID authentication\n    const tokens = await this.exchangeCodeForTokens(code, state);\n    \n    // Get user info if scope includes profile\n    let userInfo;\n    if (this.config.scopes.includes('profile') && this.config.provider.userInfoEndpoint) {\n      userInfo = await this.getUserInfo(tokens.accessToken);\n    }\n\n    return { tokens, userInfo };\n  }\n\n  /**\n   * Exchange authorization code for tokens using QuID authentication\n   */\n  private async exchangeCodeForTokens(code: string, state?: string): Promise<OAuthTokenResponse> {\n    try {\n      // Use QuID to authenticate the token request\n      const authResponse = await this.quidClient.authenticate({\n        challenge: this.generateChallenge(),\n        origin: window.location.origin\n      });\n\n      if (!authResponse.success) {\n        throw new Error('QuID authentication failed for token exchange');\n      }\n\n      // Prepare token request\n      const tokenRequest = {\n        grant_type: 'authorization_code',\n        client_id: this.config.clientId,\n        client_secret: this.config.clientSecret,\n        code,\n        redirect_uri: this.config.redirectUri,\n        quid_credential: JSON.stringify(authResponse.credential)\n      };\n\n      const response = await fetch(this.config.provider.tokenEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json'\n        },\n        body: new URLSearchParams(tokenRequest).toString()\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(`Token exchange failed: ${errorData.error || response.statusText}`);\n      }\n\n      const tokenData = await response.json();\n      \n      this.logger.debug('Token exchange successful');\n\n      return {\n        accessToken: tokenData.access_token,\n        tokenType: tokenData.token_type || 'Bearer',\n        expiresIn: tokenData.expires_in,\n        refreshToken: tokenData.refresh_token,\n        scope: tokenData.scope,\n        idToken: tokenData.id_token\n      };\n\n    } catch (error) {\n      this.logger.error('Token exchange failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Refresh access token using QuID authentication\n   */\n  public async refreshToken(refreshToken: string): Promise<OAuthTokenResponse> {\n    if (!refreshToken) {\n      throw new Error('Refresh token is required');\n    }\n\n    try {\n      // Use QuID to authenticate the refresh request\n      const authResponse = await this.quidClient.authenticate({\n        challenge: this.generateChallenge(),\n        origin: window.location.origin\n      });\n\n      if (!authResponse.success) {\n        throw new Error('QuID authentication failed for token refresh');\n      }\n\n      const refreshRequest = {\n        grant_type: 'refresh_token',\n        client_id: this.config.clientId,\n        client_secret: this.config.clientSecret,\n        refresh_token: refreshToken,\n        quid_credential: JSON.stringify(authResponse.credential)\n      };\n\n      const response = await fetch(this.config.provider.tokenEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json'\n        },\n        body: new URLSearchParams(refreshRequest).toString()\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(`Token refresh failed: ${errorData.error || response.statusText}`);\n      }\n\n      const tokenData = await response.json();\n      \n      return {\n        accessToken: tokenData.access_token,\n        tokenType: tokenData.token_type || 'Bearer',\n        expiresIn: tokenData.expires_in,\n        refreshToken: tokenData.refresh_token || refreshToken, // Use new refresh token if provided\n        scope: tokenData.scope,\n        idToken: tokenData.id_token\n      };\n\n    } catch (error) {\n      this.logger.error('Token refresh failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get user information using access token\n   */\n  public async getUserInfo(accessToken: string): Promise<any> {\n    if (!this.config.provider.userInfoEndpoint) {\n      throw new Error('User info endpoint not configured');\n    }\n\n    try {\n      const response = await fetch(this.config.provider.userInfoEndpoint, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`,\n          'Accept': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch user info: ${response.statusText}`);\n      }\n\n      return await response.json();\n\n    } catch (error) {\n      this.logger.error('Failed to get user info:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Verify and decode ID token\n   */\n  public async verifyIdToken(idToken: string): Promise<any> {\n    if (!this.config.provider.jwksEndpoint) {\n      this.logger.warn('JWKS endpoint not configured, skipping token verification');\n      return jose.decodeJwt(idToken);\n    }\n\n    try {\n      // Fetch JWKS\n      const jwks = await jose.createRemoteJWKSet(new URL(this.config.provider.jwksEndpoint));\n      \n      // Verify and decode the token\n      const { payload } = await jose.jwtVerify(idToken, jwks, {\n        issuer: this.extractIssuerFromEndpoint(),\n        audience: this.config.clientId\n      });\n\n      return payload;\n\n    } catch (error) {\n      this.logger.error('ID token verification failed:', error);\n      throw new Error('Invalid ID token');\n    }\n  }\n\n  /**\n   * Logout from OAuth provider\n   */\n  public generateLogoutUrl(options: {\n    postLogoutRedirectUri?: string;\n    state?: string;\n  } = {}): string {\n    const { postLogoutRedirectUri, state } = options;\n    \n    // Standard logout endpoint (RFC 7636)\n    const logoutEndpoint = this.config.provider.authorizationEndpoint.replace('/authorize', '/logout');\n    \n    const params = new URLSearchParams({\n      client_id: this.config.clientId\n    });\n\n    if (postLogoutRedirectUri) {\n      params.set('post_logout_redirect_uri', postLogoutRedirectUri);\n    }\n\n    if (state) {\n      params.set('state', state);\n    }\n\n    return `${logoutEndpoint}?${params.toString()}`;\n  }\n\n  /**\n   * Create PKCE challenge for secure OAuth flow\n   */\n  public generatePKCEChallenge(): { codeVerifier: string; codeChallenge: string } {\n    // Generate code verifier\n    const array = new Uint8Array(32);\n    crypto.getRandomValues(array);\n    const codeVerifier = this.base64URLEncode(array);\n    \n    // Generate code challenge\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    return crypto.subtle.digest('SHA-256', data).then(hash => {\n      const codeChallenge = this.base64URLEncode(new Uint8Array(hash));\n      return { codeVerifier, codeChallenge };\n    }) as any; // Simplified for demo\n  }\n\n  /**\n   * Start OAuth flow with PKCE and QuID integration\n   */\n  public async startSecureFlow(options: {\n    state?: string;\n    nonce?: string;\n  } = {}): Promise<{ authUrl: string; codeVerifier: string }> {\n    const { state, nonce } = options;\n    \n    // Generate PKCE challenge\n    const { codeVerifier, codeChallenge } = this.generatePKCEChallenge();\n    \n    // Generate auth URL with PKCE\n    const authUrl = this.generateAuthUrl({\n      state,\n      nonce,\n      additionalParams: {\n        code_challenge: codeChallenge,\n        code_challenge_method: 'S256'\n      }\n    });\n\n    return { authUrl, codeVerifier };\n  }\n\n  private generateChallenge(): string {\n    const array = new Uint8Array(32);\n    crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n  }\n\n  private base64URLEncode(buffer: Uint8Array): string {\n    const base64 = btoa(String.fromCharCode(...buffer));\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  }\n\n  private extractIssuerFromEndpoint(): string {\n    try {\n      const url = new URL(this.config.provider.authorizationEndpoint);\n      return `${url.protocol}//${url.host}`;\n    } catch {\n      return 'unknown';\n    }\n  }\n\n  /**\n   * Update configuration\n   */\n  public updateConfig(newConfig: Partial<OAuthConfig>): void {\n    Object.assign(this.config, newConfig);\n  }\n\n  /**\n   * Get current configuration\n   */\n  public getConfig(): OAuthConfig {\n    return { ...this.config };\n  }\n}","/**\n * Sign in with QuID Button\n * Vanilla JavaScript component for QuID authentication\n */\n\nimport { QuIDClient } from '../core/quid-client';\nimport { SigninOptions, ComponentStyle, AuthenticationResponse } from '../types';\n\nexport class QuIDSigninButton {\n  private client: QuIDClient;\n  private container: HTMLElement;\n  private button: HTMLButtonElement;\n  private options: Required<SigninOptions>;\n  private isLoading = false;\n\n  constructor(container: HTMLElement | string, options: SigninOptions = {}) {\n    // Get container element\n    if (typeof container === 'string') {\n      const element = document.querySelector(container) as HTMLElement;\n      if (!element) {\n        throw new Error(`Container element not found: ${container}`);\n      }\n      this.container = element;\n    } else {\n      this.container = container;\n    }\n\n    // Set default options\n    this.options = {\n      challenge: options.challenge || '',\n      userVerification: options.userVerification || 'preferred',\n      timeout: options.timeout || 60000,\n      onSuccess: options.onSuccess || (() => {}),\n      onError: options.onError || (() => {}),\n      style: options.style || {},\n      buttonText: options.buttonText || 'Sign in with QuID',\n      showBranding: options.showBranding !== false\n    };\n\n    // Initialize QuID client\n    this.client = new QuIDClient();\n\n    // Create the button\n    this.createButton();\n    this.setupEventListeners();\n  }\n\n  /**\n   * Create the signin button element\n   */\n  private createButton(): void {\n    this.button = document.createElement('button');\n    this.button.type = 'button';\n    this.button.className = 'quid-signin-button';\n    \n    // Apply styles\n    this.applyStyles();\n    \n    // Set content\n    this.updateButtonContent();\n    \n    // Add to container\n    this.container.appendChild(this.button);\n  }\n\n  /**\n   * Apply styles to the button\n   */\n  private applyStyles(): void {\n    const defaultStyle: ComponentStyle = {\n      width: '100%',\n      height: '44px',\n      backgroundColor: '#667eea',\n      color: '#ffffff',\n      borderRadius: '6px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      fontSize: '16px',\n      padding: '0 16px',\n      margin: '8px 0'\n    };\n\n    const style = { ...defaultStyle, ...this.options.style };\n\n    // Apply styles\n    Object.assign(this.button.style, {\n      width: style.width,\n      height: style.height,\n      backgroundColor: style.backgroundColor,\n      color: style.color,\n      borderRadius: style.borderRadius,\n      fontFamily: style.fontFamily,\n      fontSize: style.fontSize,\n      padding: style.padding,\n      margin: style.margin,\n      border: 'none',\n      cursor: 'pointer',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: '8px',\n      transition: 'all 0.2s ease',\n      textDecoration: 'none',\n      fontWeight: '500',\n      lineHeight: '1',\n      outline: 'none',\n      position: 'relative',\n      overflow: 'hidden'\n    });\n\n    // Add custom class if provided\n    if (style.className) {\n      this.button.className += ` ${style.className}`;\n    }\n\n    // Add hover effects\n    this.button.addEventListener('mouseenter', () => {\n      if (!this.isLoading) {\n        this.button.style.transform = 'translateY(-1px)';\n        this.button.style.boxShadow = '0 4px 12px rgba(102, 126, 234, 0.3)';\n      }\n    });\n\n    this.button.addEventListener('mouseleave', () => {\n      if (!this.isLoading) {\n        this.button.style.transform = 'translateY(0)';\n        this.button.style.boxShadow = 'none';\n      }\n    });\n  }\n\n  /**\n   * Update button content\n   */\n  private updateButtonContent(): void {\n    if (this.isLoading) {\n      this.button.innerHTML = `\n        <div class=\"quid-spinner\" style=\"\n          width: 16px;\n          height: 16px;\n          border: 2px solid transparent;\n          border-top: 2px solid currentColor;\n          border-radius: 50%;\n          animation: quid-spin 1s linear infinite;\n        \"></div>\n        <span>Authenticating...</span>\n      `;\n    } else {\n      const icon = this.options.showBranding ? \n        '<span style=\"font-size: 18px;\">🔐</span>' : '';\n      \n      this.button.innerHTML = `\n        ${icon}\n        <span>${this.options.buttonText}</span>\n      `;\n    }\n\n    // Add spinner animation CSS if not already added\n    if (!document.querySelector('#quid-spinner-styles')) {\n      const style = document.createElement('style');\n      style.id = 'quid-spinner-styles';\n      style.textContent = `\n        @keyframes quid-spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n\n  /**\n   * Set up event listeners\n   */\n  private setupEventListeners(): void {\n    this.button.addEventListener('click', this.handleClick.bind(this));\n    \n    // Listen for QuID client events\n    this.client.on((event) => {\n      if (event.type === 'ready' && !this.client.extensionAvailable) {\n        this.showWarning();\n      }\n    });\n  }\n\n  /**\n   * Handle button click\n   */\n  private async handleClick(): Promise<void> {\n    if (this.isLoading) {\n      return;\n    }\n\n    try {\n      this.setLoading(true);\n\n      // Generate challenge if not provided\n      const challenge = this.options.challenge || this.generateChallenge();\n\n      // Authenticate\n      const response = await this.client.authenticate({\n        challenge,\n        userVerification: this.options.userVerification,\n        timeout: this.options.timeout,\n        origin: window.location.origin\n      });\n\n      if (response.success) {\n        this.options.onSuccess(response);\n      } else {\n        this.options.onError(new Error(response.error || 'Authentication failed'));\n      }\n\n    } catch (error) {\n      this.options.onError(error instanceof Error ? error : new Error('Authentication failed'));\n    } finally {\n      this.setLoading(false);\n    }\n  }\n\n  /**\n   * Set loading state\n   */\n  private setLoading(loading: boolean): void {\n    this.isLoading = loading;\n    this.button.disabled = loading;\n    this.updateButtonContent();\n    \n    if (loading) {\n      this.button.style.transform = 'translateY(0)';\n      this.button.style.boxShadow = 'none';\n      this.button.style.cursor = 'wait';\n    } else {\n      this.button.style.cursor = 'pointer';\n    }\n  }\n\n  /**\n   * Show warning when extension is not available\n   */\n  private showWarning(): void {\n    const warningElement = document.createElement('div');\n    warningElement.className = 'quid-warning';\n    warningElement.style.cssText = `\n      background: #fff3cd;\n      border: 1px solid #ffeaa7;\n      color: #856404;\n      padding: 8px 12px;\n      border-radius: 4px;\n      font-size: 12px;\n      margin-top: 4px;\n      font-family: ${this.options.style?.fontFamily || 'inherit'};\n    `;\n    warningElement.innerHTML = `\n      ⚠️ QuID browser extension not detected. \n      <a href=\"https://quid.dev/download\" target=\"_blank\" style=\"color: inherit; text-decoration: underline;\">\n        Install extension\n      </a> for full functionality.\n    `;\n\n    this.container.appendChild(warningElement);\n\n    // Auto-hide after 10 seconds\n    setTimeout(() => {\n      if (warningElement.parentElement) {\n        warningElement.parentElement.removeChild(warningElement);\n      }\n    }, 10000);\n  }\n\n  /**\n   * Generate random challenge\n   */\n  private generateChallenge(): string {\n    const array = new Uint8Array(32);\n    crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n  }\n\n  /**\n   * Update options\n   */\n  public updateOptions(newOptions: Partial<SigninOptions>): void {\n    Object.assign(this.options, newOptions);\n    this.applyStyles();\n    this.updateButtonContent();\n  }\n\n  /**\n   * Destroy the component\n   */\n  public destroy(): void {\n    if (this.button && this.button.parentElement) {\n      this.button.parentElement.removeChild(this.button);\n    }\n    this.client.disconnect();\n  }\n\n  /**\n   * Get the underlying QuID client\n   */\n  public getClient(): QuIDClient {\n    return this.client;\n  }\n}\n\n/**\n * Factory function to create signin button\n */\nexport function createSigninButton(container: HTMLElement | string, options?: SigninOptions): QuIDSigninButton {\n  return new QuIDSigninButton(container, options);\n}","/**\n * QuID React Signin Button Component\n * React wrapper for QuID authentication\n */\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { QuIDClient } from '../../core/quid-client';\nimport { SigninOptions, AuthenticationResponse, QuIDEvent } from '../../types';\n\nexport interface QuIDSigninButtonProps extends Omit<SigninOptions, 'onSuccess' | 'onError'> {\n  /** Callback when authentication succeeds */\n  onSuccess?: (response: AuthenticationResponse) => void;\n  /** Callback when authentication fails */\n  onError?: (error: Error) => void;\n  /** Additional CSS class names */\n  className?: string;\n  /** Whether the button is disabled */\n  disabled?: boolean;\n  /** Children to render instead of default button text */\n  children?: React.ReactNode;\n}\n\n/**\n * QuID Signin Button React Component\n */\nexport const QuIDSigninButton: React.FC<QuIDSigninButtonProps> = ({\n  challenge,\n  userVerification = 'preferred',\n  timeout = 60000,\n  onSuccess,\n  onError,\n  style = {},\n  buttonText = 'Sign in with QuID',\n  showBranding = true,\n  className = '',\n  disabled = false,\n  children,\n  ...props\n}) => {\n  const clientRef = useRef<QuIDClient | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n  const [extensionAvailable, setExtensionAvailable] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n\n  // Initialize QuID client\n  useEffect(() => {\n    clientRef.current = new QuIDClient();\n    \n    const unsubscribe = clientRef.current.on((event: QuIDEvent) => {\n      switch (event.type) {\n        case 'ready':\n          setIsReady(true);\n          break;\n        case 'extension-connected':\n          setExtensionAvailable(true);\n          break;\n        case 'extension-disconnected':\n          setExtensionAvailable(false);\n          setShowWarning(true);\n          break;\n      }\n    });\n\n    return () => {\n      unsubscribe();\n      if (clientRef.current) {\n        clientRef.current.disconnect();\n      }\n    };\n  }, []);\n\n  // Check extension availability after ready\n  useEffect(() => {\n    if (isReady && clientRef.current) {\n      const available = clientRef.current.extensionAvailable;\n      setExtensionAvailable(available);\n      if (!available) {\n        setShowWarning(true);\n        // Auto-hide warning after 10 seconds\n        setTimeout(() => setShowWarning(false), 10000);\n      }\n    }\n  }, [isReady]);\n\n  const handleClick = useCallback(async () => {\n    if (!clientRef.current || isLoading || disabled) {\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n\n      // Generate challenge if not provided\n      const authChallenge = challenge || generateChallenge();\n\n      // Authenticate\n      const response = await clientRef.current.authenticate({\n        challenge: authChallenge,\n        userVerification,\n        timeout,\n        origin: window.location.origin\n      });\n\n      if (response.success) {\n        onSuccess?.(response);\n      } else {\n        onError?.(new Error(response.error || 'Authentication failed'));\n      }\n\n    } catch (error) {\n      onError?.(error instanceof Error ? error : new Error('Authentication failed'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [challenge, userVerification, timeout, onSuccess, onError, isLoading, disabled]);\n\n  const generateChallenge = (): string => {\n    const array = new Uint8Array(32);\n    crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n  };\n\n  const defaultStyle: React.CSSProperties = {\n    width: '100%',\n    height: '44px',\n    backgroundColor: '#667eea',\n    color: '#ffffff',\n    borderRadius: '6px',\n    fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n    fontSize: '16px',\n    padding: '0 16px',\n    margin: '8px 0',\n    border: 'none',\n    cursor: isLoading || disabled ? 'not-allowed' : 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: '8px',\n    transition: 'all 0.2s ease',\n    textDecoration: 'none',\n    fontWeight: '500',\n    lineHeight: '1',\n    outline: 'none',\n    position: 'relative',\n    overflow: 'hidden',\n    opacity: disabled ? 0.6 : 1,\n    ...style\n  };\n\n  const buttonContent = children || (\n    <>\n      {showBranding && <span style={{ fontSize: '18px' }}>🔐</span>}\n      <span>{isLoading ? 'Authenticating...' : buttonText}</span>\n      {isLoading && (\n        <div\n          style={{\n            width: '16px',\n            height: '16px',\n            border: '2px solid transparent',\n            borderTop: '2px solid currentColor',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite'\n          }}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={handleClick}\n        disabled={disabled || isLoading || !isReady}\n        className={`quid-signin-button ${className}`}\n        style={defaultStyle}\n        {...props}\n      >\n        {buttonContent}\n      </button>\n      \n      {showWarning && (\n        <div\n          style={{\n            background: '#fff3cd',\n            border: '1px solid #ffeaa7',\n            color: '#856404',\n            padding: '8px 12px',\n            borderRadius: '4px',\n            fontSize: '12px',\n            marginTop: '4px',\n            fontFamily: defaultStyle.fontFamily\n          }}\n        >\n          ⚠️ QuID browser extension not detected.{' '}\n          <a\n            href=\"https://quid.dev/download\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ color: 'inherit', textDecoration: 'underline' }}\n          >\n            Install extension\n          </a>{' '}\n          for full functionality.\n        </div>\n      )}\n      \n      <style jsx>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default QuIDSigninButton;","/**\n * useQuID React Hook\n * React hook for QuID authentication\n */\n\nimport { useEffect, useState, useCallback, useRef } from 'react';\nimport { QuIDClient } from '../../core/quid-client';\nimport {\n  QuIDConfig,\n  QuIDIdentity,\n  AuthenticationRequest,\n  AuthenticationResponse,\n  CreateIdentityRequest,\n  QuIDEvent\n} from '../../types';\n\nexport interface UseQuIDOptions extends QuIDConfig {\n  /** Auto-initialize the client */\n  autoInit?: boolean;\n}\n\nexport interface UseQuIDReturn {\n  /** QuID client instance */\n  client: QuIDClient | null;\n  /** Whether QuID is ready */\n  isReady: boolean;\n  /** Whether QuID extension is available */\n  extensionAvailable: boolean;\n  /** Loading state */\n  isLoading: boolean;\n  /** Error state */\n  error: Error | null;\n  /** Available identities */\n  identities: QuIDIdentity[];\n  /** Authenticate with QuID */\n  authenticate: (request?: Partial<AuthenticationRequest>) => Promise<AuthenticationResponse>;\n  /** Create a new identity */\n  createIdentity: (request: CreateIdentityRequest) => Promise<QuIDIdentity>;\n  /** Refresh identities */\n  refreshIdentities: () => Promise<void>;\n  /** Get status */\n  getStatus: () => Promise<{\n    ready: boolean;\n    extensionAvailable: boolean;\n    identityCount: number;\n    version: string;\n  }>;\n  /** Clear error */\n  clearError: () => void;\n}\n\n/**\n * useQuID Hook\n */\nexport function useQuID(options: UseQuIDOptions = {}): UseQuIDReturn {\n  const { autoInit = true, ...config } = options;\n  \n  const clientRef = useRef<QuIDClient | null>(null);\n  const [isReady, setIsReady] = useState(false);\n  const [extensionAvailable, setExtensionAvailable] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [identities, setIdentities] = useState<QuIDIdentity[]>([]);\n\n  // Initialize client\n  useEffect(() => {\n    if (!autoInit) return;\n\n    const initClient = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        clientRef.current = new QuIDClient(config);\n\n        // Set up event listeners\n        const unsubscribe = clientRef.current.on((event: QuIDEvent) => {\n          switch (event.type) {\n            case 'ready':\n              setIsReady(true);\n              setExtensionAvailable(clientRef.current?.extensionAvailable || false);\n              break;\n            case 'extension-connected':\n              setExtensionAvailable(true);\n              break;\n            case 'extension-disconnected':\n              setExtensionAvailable(false);\n              break;\n            case 'error':\n              setError(event.data);\n              break;\n          }\n        });\n\n        // Cleanup function\n        return unsubscribe;\n\n      } catch (err) {\n        setError(err instanceof Error ? err : new Error('Failed to initialize QuID'));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const cleanup = initClient();\n\n    return () => {\n      cleanup.then(unsubscribe => unsubscribe?.());\n      if (clientRef.current) {\n        clientRef.current.disconnect();\n        clientRef.current = null;\n      }\n    };\n  }, [autoInit, config]);\n\n  // Load identities when ready\n  useEffect(() => {\n    if (isReady && extensionAvailable) {\n      refreshIdentities();\n    }\n  }, [isReady, extensionAvailable]);\n\n  const authenticate = useCallback(async (request: Partial<AuthenticationRequest> = {}): Promise<AuthenticationResponse> => {\n    if (!clientRef.current) {\n      throw new Error('QuID client not initialized');\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await clientRef.current.authenticate(request);\n      return response;\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Authentication failed');\n      setError(error);\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const createIdentity = useCallback(async (request: CreateIdentityRequest): Promise<QuIDIdentity> => {\n    if (!clientRef.current) {\n      throw new Error('QuID client not initialized');\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const identity = await clientRef.current.createIdentity(request);\n      \n      // Refresh identities list\n      await refreshIdentities();\n      \n      return identity;\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to create identity');\n      setError(error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const refreshIdentities = useCallback(async (): Promise<void> => {\n    if (!clientRef.current || !extensionAvailable) {\n      setIdentities([]);\n      return;\n    }\n\n    try {\n      const identityList = await clientRef.current.getIdentities();\n      setIdentities(identityList);\n    } catch (err) {\n      console.warn('Failed to refresh identities:', err);\n      setIdentities([]);\n    }\n  }, [extensionAvailable]);\n\n  const getStatus = useCallback(async () => {\n    if (!clientRef.current) {\n      return {\n        ready: false,\n        extensionAvailable: false,\n        identityCount: 0,\n        version: '1.0.0'\n      };\n    }\n\n    return await clientRef.current.getStatus();\n  }, []);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    client: clientRef.current,\n    isReady,\n    extensionAvailable,\n    isLoading,\n    error,\n    identities,\n    authenticate,\n    createIdentity,\n    refreshIdentities,\n    getStatus,\n    clearError\n  };\n}\n\nexport default useQuID;","/**\n * QuID JavaScript SDK\n * Universal quantum-resistant authentication for web applications\n */\n\n// Core exports\nexport { QuIDClient } from './core/quid-client';\nexport { ExtensionConnector } from './core/extension-connector';\nexport { WebAuthnBridge } from './core/webauthn-bridge';\n\n// OAuth exports\nexport { QuIDOAuthClient } from './oauth/oauth-client';\n\n// Component exports\nexport { QuIDSigninButton, createSigninButton } from './components/signin-button';\n\n// React exports\nexport { \n  QuIDSigninButton as QuIDSigninButtonReact,\n  default as QuIDSigninButtonReactDefault \n} from './components/react/signin-button';\nexport { useQuID, default as useQuIDDefault } from './components/react/use-quid';\n\n// Utility exports\nexport { EventEmitter } from './utils/event-emitter';\nexport { Logger } from './utils/logger';\n\n// Type exports\nexport type {\n  QuIDConfig,\n  QuIDIdentity,\n  PublicKeyInfo,\n  SecurityLevel,\n  UserVerificationRequirement,\n  AuthenticationRequest,\n  AuthenticationResponse,\n  QuIDCredential,\n  SigninOptions,\n  ComponentStyle,\n  OAuthConfig,\n  OAuthProvider,\n  OAuthTokenResponse,\n  QuIDEvent,\n  QuIDEventType,\n  QuIDSDKError,\n  CreateIdentityRequest,\n  WebAuthnCredentialCreationOptions,\n  WebAuthnCredentialRequestOptions\n} from './types';\n\nexport type {\n  PublicKeyCredentialDescriptor,\n  PublicKeyCredentialParameters,\n  AuthenticatorSelectionCriteria,\n  AttestationConveyancePreference,\n  AuthenticatorTransport\n} from './browser-types';\n\n// Default export\nexport default QuIDClient;"],"names":["QuIDClient","QuIDSigninButton","_jsxs","_Fragment","_jsx"],"mappings":"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"}